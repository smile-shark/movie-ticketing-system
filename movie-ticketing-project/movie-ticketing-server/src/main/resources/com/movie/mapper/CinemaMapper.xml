<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.movie.mapper.CinemaMapper">
    <select id="selectCinemaByCinemaManagementId" resultType="cinema">
        select *
        from cinema
        where cinema_management_id = #{cinemaManagementId}
    </select>
    <insert id="insertCinema">
        insert into cinema
        (cinema_id, cinema_brand_id, cinema_management_id, county_id, cinema_name,
         cinema_address, cinema_phone, cinema_email, cinema_url,
         cinema_start_time, cinema_end_time)
        values (#{cinema.cinemaId}, #{cinema.cinemaBrandId}, #{cinema.cinemaManagementId}, #{cinema.countyId},
                #{cinema.cinemaName}, #{cinema.cinemaAddress}, #{cinema.cinemaPhone}, #{cinema.cinemaEmail},
                #{cinema.cinemaUrl}, #{cinema.cinemaStartTime}, #{cinema.cinemaEndTime})
    </insert>
    <select id="selectCinemaByCinemaId" resultMap="customerSelectLowPriceCinema">
        select *
        from cinema
        where cinema_id = #{cinemaId}
    </select>
    <resultMap id="customerSelectLowPriceCinema" type="cinema">
        <id property="cinemaId" column="cinema_id"/>
        <result property="cinemaBrandId" column="cinema_brand_id"/>
        <association property="cinemaBrand"
                     column="cinema_brand_id"
                     select="com.movie.mapper.CinemaBrandMapper.selectCinemaBrandByCinemaBrandId"/>
    </resultMap>
    <select id="customerSelectLowPriceCinema" resultMap="customerSelectLowPriceCinema">
        SELECT
        cinema.cinema_id,
        cinema.cinema_brand_id,
        cinema.county_id,
        cinema.cinema_name,
        cinema.cinema_address,
        cinema.cinema_phone,
        cinema.cinema_points,
        cinema.cinema_start_time,
        cinema.cinema_end_time,
        MIN(
        CASE WHEN slice_arrangement.movie_id = #{movieId}
        THEN slice_arrangement.vote_price
        ELSE NULL END
        ) AS lowest_price
        FROM cinema
        JOIN slice_arrangement ON slice_arrangement.cinema_id = cinema.cinema_id
        <where>
            <if test="countyId!=null">
                cinema.county_id = #{countyId}
            </if>
            <if test="cinemaBrandId!=null">
                AND cinema.cinema_brand_id = #{cinemaBrandId}
            </if>
            AND (
            (cinema.cinema_start_time &lt; cinema.cinema_end_time AND
                                        CURTIME() BETWEEN cinema.cinema_start_time AND cinema.cinema_end_time)
            OR
            (cinema.cinema_start_time &gt; cinema.cinema_end_time AND
            (CURTIME() &gt;= cinema.cinema_start_time OR CURTIME() &lt;= cinema.cinema_end_time))
            )
            AND slice_arrangement.movie_id = #{movieId}
            AND NOW() &lt; slice_arrangement.slice_arrangement_start_time
        </where>
        GROUP BY
        cinema.cinema_id,
        cinema.cinema_brand_id,
        cinema.county_id,
        cinema.cinema_name,
        cinema.cinema_address,
        cinema.cinema_phone,
        cinema.cinema_points,
        cinema.cinema_start_time,
        cinema.cinema_end_time
        ORDER BY cinema.cinema_points DESC, lowest_price
    </select>
    <update id="updateCinema">
        update cinema
        set cinema_brand_id=#{cinema.cinemaBrandId},
            county_id=#{cinema.countyId},
            cinema_name=#{cinema.cinemaName},
            cinema_address=#{cinema.cinemaAddress},
            cinema_phone=#{cinema.cinemaPhone},
            cinema_email=#{cinema.cinemaEmail},
            cinema_url=#{cinema.cinemaUrl},
            cinema_start_time=#{cinema.cinemaStartTime},
            cinema_end_time=#{cinema.cinemaEndTime}
        where cinema_id=#{cinema.cinemaId}
    </update>
    <select id="cinemaTotal">
        select count(cinema_id) from cinema
    </select>
</mapper>